<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Test</title>
      <link href="/2021/082514373.html"/>
      <url>/2021/082514373.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL学习</title>
      <link href="/2021/082532011.html"/>
      <url>/2021/082532011.html</url>
      
        <content type="html"><![CDATA[<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h3 id="SQL-常规操作"><a href="#SQL-常规操作" class="headerlink" title="SQL 常规操作"></a>SQL 常规操作</h3><h4 id="1、建库建表"><a href="#1、建库建表" class="headerlink" title="1、建库建表"></a>1、建库建表</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> SPJ<span class="token punctuation">;</span><span class="token keyword">use</span> SPJ<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> S <span class="token punctuation">(</span>  SNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  SNAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">STATUS</span> <span class="token keyword">int</span><span class="token punctuation">,</span>  CITY <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>SNO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> P <span class="token punctuation">(</span>  PNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  PNAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  COLOR <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  WEIGHT <span class="token keyword">int</span>  <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>PNO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> J <span class="token punctuation">(</span>  JNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  JNAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  CITY <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>JNO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> SPJ <span class="token punctuation">(</span>  SNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  PNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  JNO <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  QTY <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="2、插入、更新数据-和-添加、删除外键"><a href="#2、插入、更新数据-和-添加、删除外键" class="headerlink" title="2、插入、更新数据 和 添加、删除外键"></a>2、插入、更新数据 和 添加、删除外键</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> S <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'精益'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'天津'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'盛锡'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'北京'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S3'</span><span class="token punctuation">,</span><span class="token string">'东方红'</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'北京'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S4'</span><span class="token punctuation">,</span><span class="token string">'丰盛泰'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'天津'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S5'</span><span class="token punctuation">,</span><span class="token string">'为民'</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> P <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'P1'</span><span class="token punctuation">,</span><span class="token string">'螺母'</span><span class="token punctuation">,</span><span class="token string">'红'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'P2'</span><span class="token punctuation">,</span><span class="token string">'螺栓'</span><span class="token punctuation">,</span><span class="token string">'绿'</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'螺丝刀'</span><span class="token punctuation">,</span><span class="token string">'蓝'</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'P4'</span><span class="token punctuation">,</span><span class="token string">'螺丝刀'</span><span class="token punctuation">,</span><span class="token string">'红'</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'P5'</span><span class="token punctuation">,</span><span class="token string">'凸轮'</span><span class="token punctuation">,</span><span class="token string">'蓝'</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'P6'</span><span class="token punctuation">,</span><span class="token string">'齿轮'</span><span class="token punctuation">,</span><span class="token string">'红'</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> J <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token string">'三建'</span><span class="token punctuation">,</span><span class="token string">'北京'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J2'</span><span class="token punctuation">,</span><span class="token string">'一汽'</span><span class="token punctuation">,</span><span class="token string">'长春'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J3'</span><span class="token punctuation">,</span><span class="token string">'弹簧厂'</span><span class="token punctuation">,</span><span class="token string">'天津'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token string">'造船厂'</span><span class="token punctuation">,</span><span class="token string">'天津'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J5'</span><span class="token punctuation">,</span><span class="token string">'机车厂'</span><span class="token punctuation">,</span><span class="token string">'唐山'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J6'</span><span class="token punctuation">,</span><span class="token string">'无线电厂'</span><span class="token punctuation">,</span><span class="token string">'常州'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'J7'</span><span class="token punctuation">,</span><span class="token string">'半导体厂'</span><span class="token punctuation">,</span><span class="token string">'南京'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> SPJ <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'P1'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'P1'</span><span class="token punctuation">,</span><span class="token string">'J3'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'P1'</span><span class="token punctuation">,</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'P2'</span><span class="token punctuation">,</span><span class="token string">'J2'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J2'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J5'</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P5'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S2'</span><span class="token punctuation">,</span><span class="token string">'P5'</span><span class="token punctuation">,</span><span class="token string">'J2'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S3'</span><span class="token punctuation">,</span><span class="token string">'P1'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S3'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S4'</span><span class="token punctuation">,</span><span class="token string">'P5'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S4'</span><span class="token punctuation">,</span><span class="token string">'P6'</span><span class="token punctuation">,</span><span class="token string">'J3'</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S4'</span><span class="token punctuation">,</span><span class="token string">'P6'</span><span class="token punctuation">,</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S5'</span><span class="token punctuation">,</span><span class="token string">'P2'</span><span class="token punctuation">,</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S5'</span><span class="token punctuation">,</span><span class="token string">'P3'</span><span class="token punctuation">,</span><span class="token string">'J1'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S5'</span><span class="token punctuation">,</span><span class="token string">'P6'</span><span class="token punctuation">,</span><span class="token string">'J2'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'S5'</span><span class="token punctuation">,</span><span class="token string">'P6'</span><span class="token punctuation">,</span><span class="token string">'J4'</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span>  S1  <span class="token keyword">select</span> SNO<span class="token punctuation">,</span>SNAME<span class="token punctuation">,</span>SDEPT<span class="token punctuation">,</span>SAGE <span class="token keyword">from</span> STUDENT <span class="token keyword">where</span> SDEPT <span class="token operator">=</span><span class="token string">'CS'</span><span class="token punctuation">;</span><span class="token keyword">update</span> SPJ <span class="token keyword">set</span> SNO<span class="token operator">=</span><span class="token string">'S3'</span> <span class="token keyword">where</span> SNO<span class="token operator">=</span><span class="token string">'S5'</span><span class="token operator">and</span> JNO<span class="token operator">=</span><span class="token string">'J4'</span><span class="token punctuation">;</span><span class="token keyword">update</span> P <span class="token keyword">set</span> COLOR <span class="token operator">=</span><span class="token string">'蓝'</span> <span class="token keyword">where</span> COLOR <span class="token operator">=</span><span class="token string">'红'</span><span class="token punctuation">;</span><span class="token keyword">update</span> STUDENT  <span class="token keyword">set</span> SDEPT<span class="token operator">=</span><span class="token string">'CS'</span><span class="token keyword">where</span> SDEPT<span class="token operator">=</span><span class="token string">'计算机系'</span><span class="token punctuation">;</span><span class="token keyword">begin</span> <span class="token keyword">transaction</span><span class="token keyword">update</span> GRADE <span class="token keyword">set</span> Grade<span class="token operator">=</span>Grade<span class="token operator">+</span><span class="token number">5</span> <span class="token keyword">where</span> SNO <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> SNO <span class="token keyword">from</span> STUDENT_CS<span class="token punctuation">)</span> <span class="token operator">and</span> CNO<span class="token operator">=</span><span class="token string">'001'</span><span class="token punctuation">;</span><span class="token keyword">rollback</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">add</span> <span class="token keyword">constraint</span> SSP <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>SNO<span class="token punctuation">)</span> <span class="token keyword">references</span> S<span class="token punctuation">(</span>SNO<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">add</span> <span class="token keyword">constraint</span> PSP <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>PNO<span class="token punctuation">)</span> <span class="token keyword">references</span> P<span class="token punctuation">(</span>PNO<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">add</span> <span class="token keyword">constraint</span> JSP <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>JNO<span class="token punctuation">)</span> <span class="token keyword">references</span> J<span class="token punctuation">(</span>JNO<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">drop</span> <span class="token keyword">constraint</span> SSP<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">drop</span> <span class="token keyword">constraint</span> PSP<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SPJ <span class="token keyword">drop</span> <span class="token keyword">constraint</span> JSP<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*修改字段数据类型*/</span><span class="token keyword">alter</span> <span class="token keyword">table</span> STUDENT <span class="token keyword">alter</span>  <span class="token keyword">column</span> SSEX nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">--去重查询</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h4 id="3、NOT-EXISTS-来完成-➗操作"><a href="#3、NOT-EXISTS-来完成-➗操作" class="headerlink" title="3、NOT EXISTS 来完成 ➗操作"></a>3、NOT EXISTS 来完成 ➗操作</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> JNO <span class="token keyword">from</span> SPJ A <span class="token keyword">where</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token keyword">distinct</span> PNO<span class="token punctuation">,</span>SNO <span class="token keyword">from</span> SPJ B <span class="token keyword">where</span> SNO<span class="token operator">=</span><span class="token string">'S1'</span> <span class="token operator">and</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> PNO<span class="token punctuation">,</span>SNO <span class="token keyword">from</span> SPJ C <span class="token keyword">where</span> A<span class="token punctuation">.</span>JNO <span class="token operator">=</span> C<span class="token punctuation">.</span>JNO <span class="token operator">and</span> B<span class="token punctuation">.</span>PNO<span class="token operator">=</span>C<span class="token punctuation">.</span>PNO <span class="token operator">and</span> B<span class="token punctuation">.</span>SNO<span class="token operator">=</span>C<span class="token punctuation">.</span>SNO<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*括号中查询的是没有使用S1提供的零件的工程编号 A.JNO = C.JNO 用于完成除运算*/</span></code></pre><h4 id="4、实验查询"><a href="#4、实验查询" class="headerlink" title="4、实验查询"></a>4、实验查询</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> TName <span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 人数 <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> TName <span class="token keyword">from</span> GRADE<span class="token punctuation">,</span>Teacher <span class="token keyword">where</span> GRADE<span class="token punctuation">.</span>CNO<span class="token operator">=</span>Teacher<span class="token punctuation">.</span>CNO<span class="token punctuation">)</span> t <span class="token comment" spellcheck="true">/* 从查询中查询要加别名，如t*/</span><span class="token keyword">group</span> <span class="token keyword">by</span> TName <span class="token keyword">having</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*建表插入查询*/</span>go<span class="token keyword">create</span> <span class="token keyword">table</span> S1<span class="token punctuation">(</span> SNO <span class="token keyword">nchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>SNAME nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SD nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SA <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span>  S1 <span class="token keyword">select</span> SNO<span class="token punctuation">,</span>SNAME<span class="token punctuation">,</span>SDEPT<span class="token punctuation">,</span>SAGE <span class="token keyword">from</span> STUDENT <span class="token keyword">where</span> SDEPT <span class="token operator">=</span><span class="token string">'CS'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*建立视图，更新数据*/</span>go <span class="token keyword">create</span> <span class="token keyword">view</span> STUDENT_CS <span class="token keyword">as</span> <span class="token keyword">select</span><span class="token operator">*</span> <span class="token keyword">from</span> STUDENT s <span class="token keyword">where</span> s<span class="token punctuation">.</span>SDEPT <span class="token operator">=</span> <span class="token string">'CS'</span>go<span class="token keyword">update</span> GRADE <span class="token keyword">set</span> Grade<span class="token operator">=</span>Grade<span class="token operator">+</span><span class="token number">5</span> <span class="token keyword">where</span> SNO <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> SNO <span class="token keyword">from</span> STUDENT_CS<span class="token punctuation">)</span> <span class="token operator">and</span> CNO<span class="token operator">=</span><span class="token string">'001'</span><span class="token comment" spellcheck="true">/*建立存储过程*/</span>go <span class="token keyword">create</span> <span class="token keyword">procedure</span> classify  <span class="token variable">@low</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@High</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">select</span> SNAME<span class="token punctuation">,</span>SDEPT<span class="token punctuation">,</span>Grade <span class="token keyword">from</span> STUDENT s<span class="token punctuation">,</span>GRADE g <span class="token keyword">where</span> s<span class="token punctuation">.</span>SNO<span class="token operator">=</span>g<span class="token punctuation">.</span>SNO<span class="token operator">and</span> CNO <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> CNO <span class="token keyword">from</span> COURSE <span class="token keyword">where</span> CNAME<span class="token operator">=</span><span class="token string">'数据结构'</span><span class="token punctuation">)</span> <span class="token operator">and</span> Grade<span class="token operator">></span><span class="token variable">@low</span> <span class="token operator">and</span> Grade<span class="token operator">&lt;</span><span class="token variable">@High</span>classify <span class="token number">70</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token comment" spellcheck="true">/*group by*/</span><span class="token keyword">select</span> SNAME<span class="token punctuation">,</span>CNO<span class="token punctuation">,</span>最高分 <span class="token keyword">from</span> GRADE g<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> s<span class="token punctuation">.</span>SNO<span class="token punctuation">,</span> SNAME<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> 最高分 <span class="token keyword">from</span> STUDENT s<span class="token punctuation">,</span>GRADE g <span class="token keyword">where</span> s<span class="token punctuation">.</span>SNO<span class="token operator">=</span>g<span class="token punctuation">.</span>SNO <span class="token keyword">group</span> <span class="token keyword">by</span> s<span class="token punctuation">.</span>SNO<span class="token punctuation">,</span>SNAME<span class="token punctuation">)</span> t<span class="token keyword">where</span> t<span class="token punctuation">.</span>SNO<span class="token operator">=</span>g<span class="token punctuation">.</span>SNO <span class="token operator">and</span> t<span class="token punctuation">.</span>最高分<span class="token operator">=</span>g<span class="token punctuation">.</span>Grade <span class="token keyword">order</span> <span class="token keyword">by</span> 最高分 <span class="token keyword">desc</span><span class="token punctuation">;</span></code></pre><h3 id="SQL-编程"><a href="#SQL-编程" class="headerlink" title="SQL 编程"></a>SQL 编程</h3><h4 id="嵌入式SQL"><a href="#嵌入式SQL" class="headerlink" title="嵌入式SQL"></a>嵌入式SQL</h4><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* C语言 */</span>EXEC SQL <span class="token operator">&lt;</span>SQL 语句<span class="token operator">></span><span class="token punctuation">;</span><span class="token operator">--</span>连接语句EXEC SQL CONNECT TO target<span class="token punctuation">[</span> AS connection<span class="token operator">-</span>name<span class="token punctuation">]</span><span class="token punctuation">[</span>USER user<span class="token operator">-</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>target 是连接的数据库服务器 <span class="token operator">&lt;</span>dbname<span class="token operator">></span>@<span class="token operator">&lt;</span>hostname<span class="token operator">></span><span class="token punctuation">:</span><span class="token operator">&lt;</span>port<span class="token operator">></span> <span class="token punctuation">,</span>也可以是DEFAULTconnection<span class="token operator">-</span>anme 是可选的连接名<span class="token punctuation">,</span>用来标识一个程序内同时建立的多个连接EXEC SQL SET CONNECTION connection<span class="token operator">-</span>name<span class="token operator">|</span>DEFAULT<span class="token punctuation">;</span>关闭连接EXEC SQL DISCONNECT<span class="token punctuation">[</span>connection<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//示例 检查莫格西的同学记录,交互式更新某些学生年龄</span>EXEC SQL BEGIN DECLARE SECTION<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*主变量说明*/</span>     <span class="token keyword">char</span> departname<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">char</span> hsno<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">char</span> hsname<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">char</span> hssex<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">int</span> HSage<span class="token punctuation">;</span>     <span class="token keyword">int</span> NEWAGE<span class="token punctuation">;</span>EXEC SQL END DECLARE SECTION<span class="token punctuation">;</span><span class="token keyword">long</span> SQLCODE                <span class="token comment" spellcheck="true">/*定义SQL通信区*/</span>EXEC SQL INCLUDE SQLCODE<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span>  count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> yn<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*表示yes和no*/</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please choose the department name(CS/MA/IS):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>departname<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*给department赋值*/</span>        EXEC SQL CONNECT TO @localhost<span class="token punctuation">:</span><span class="token number">54321</span> USER <span class="token string">"SYSTEM"</span><span class="token operator">/</span><span class="token string">"MANAGER"</span><span class="token punctuation">;</span>        EXEC SQL DECLARE SX CURSOR FOR  <span class="token comment" spellcheck="true">/*定义游标SX*/</span>        select Sno<span class="token punctuation">,</span>Sname<span class="token punctuation">,</span>Ssex<span class="token punctuation">,</span>Sage   <span class="token comment" spellcheck="true">/*SX对应语句*/</span>        from student where SDept<span class="token operator">=</span><span class="token punctuation">:</span>departname<span class="token punctuation">;</span>    EXEC SQL OPEN SX<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*打开游标 SX 指向查询结果的第一行*/</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>     <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>EXEC SQL FETCH SX INTO<span class="token punctuation">:</span>HSno<span class="token punctuation">,</span><span class="token punctuation">:</span>HSname<span class="token punctuation">,</span><span class="token punctuation">:</span>HSsex<span class="token punctuation">,</span><span class="token punctuation">:</span>HSage<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*推进游标，将当前数据放入主变量*/</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>SQLCA<span class="token punctuation">.</span>SQLCODE<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>COUNT<span class="token operator">++</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>           <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n%-10s %-20s %-10s %-10s"</span><span class="token punctuation">,</span><span class="token string">"Sno"</span><span class="token punctuation">,</span><span class="token string">"Sname"</span><span class="token punctuation">,</span><span class="token string">"Ssex"</span><span class="token punctuation">,</span><span class="token string">"Sage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%-10s %-20s %-10s %-10d\n"</span><span class="token punctuation">,</span>HSno<span class="token punctuation">,</span>HSname<span class="token punctuation">,</span>HSsex<span class="token punctuation">,</span>HSage<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"UPDATE AGE(y/n)?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*询问是否更新年龄*/</span>         <span class="token keyword">do</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>yn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token keyword">while</span><span class="token punctuation">(</span>yn<span class="token operator">!=</span><span class="token string">'N'</span><span class="token operator">&amp;&amp;</span> yn<span class="token operator">!=</span><span class="token string">'n'</span><span class="token operator">&amp;&amp;</span> yn<span class="token operator">!=</span><span class="token string">'Y'</span><span class="token operator">&amp;&amp;</span> yn<span class="token operator">!=</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">if</span><span class="token punctuation">(</span>yn<span class="token operator">=</span><span class="token string">'Y'</span><span class="token operator">&amp;&amp;</span> yn<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">/*更新操作*/</span>          <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"INPUT NEW AGE:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>NEWAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>            EXEC SQL UPDATE Student                SET Sage<span class="token operator">=</span><span class="token punctuation">:</span>NEWAGE                WHERE CURRENT OF SX   <span class="token comment" spellcheck="true">/*将当前游标指向的学生年龄进行更新*/</span>         <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        EXEC SQL CLOSE SX<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*关闭游标*/</span>        EXEC SQL COMMIT WORK<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*提交更新*/</span>        EXEC SQL DISCONNECT TEST<span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*不使用游标的查询记录为单条的SQL语句(into、having、where子句都可以使用主变量)*/</span>EXEC SQL SELECT Sno<span class="token punctuation">,</span>Sname<span class="token punctuation">,</span>Ssex<span class="token punctuation">,</span>Sage<span class="token punctuation">,</span>Sdept     INTO<span class="token punctuation">:</span>Hsno<span class="token punctuation">,</span><span class="token punctuation">:</span>Hname<span class="token punctuation">,</span><span class="token punctuation">:</span>Hsex<span class="token punctuation">,</span><span class="token punctuation">:</span>Hage<span class="token punctuation">,</span><span class="token punctuation">:</span>Hdept     FROM Student     WHERE Sno<span class="token operator">=</span><span class="token punctuation">:</span>givesno<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*非CURRENT形式的增删该语句*/</span>EXEC SQL UPDATE SC     SET Grade<span class="token operator">=</span><span class="token punctuation">:</span>newgrade     WHERE Sno<span class="token operator">=</span><span class="token punctuation">:</span>givensno and Cno<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>gradeid<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>  <span class="token comment" spellcheck="true">/*刚插入数据表中哪来的成绩*/</span>EXEC SQL INSERT      INTO <span class="token function">SC</span><span class="token punctuation">(</span>Sno<span class="token punctuation">,</span>Cno<span class="token punctuation">,</span>Grade<span class="token punctuation">)</span>     <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token punctuation">:</span>stdno<span class="token punctuation">,</span><span class="token punctuation">:</span>couno<span class="token punctuation">,</span><span class="token punctuation">:</span>gr<span class="token punctuation">:</span>gradeid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*使用游标的*/</span><span class="token comment" spellcheck="true">//查询结果为多条记录的select语句、CURRENT形式的UPDATE和DELETE语句(见上述程序实例)</span>EXEC SQL DECLARE <span class="token operator">&lt;</span>游标名<span class="token operator">></span> CURSOR FOR <span class="token operator">&lt;</span>SELECT语句<span class="token operator">></span> <span class="token comment" spellcheck="true">//说明游标 DBMS不执行select语句</span>EXEC SQL OPEN <span class="token operator">&lt;</span>游标名<span class="token operator">></span>  <span class="token comment" spellcheck="true">//打开游标,执行相应语句,将结果取到缓冲区中,游标指针指向查询结果的第一条记录</span>EXEC SQL FETCH <span class="token operator">&lt;</span>游标名<span class="token operator">></span> INTO <span class="token operator">&lt;</span>主变量<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">&lt;</span>指示变量<span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token operator">&lt;</span>主变量<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">&lt;</span>指示变量<span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//推进游标指针并取当前记录</span>EXEC SQL CLOSE <span class="token operator">&lt;</span>游标名<span class="token operator">></span> <span class="token comment" spellcheck="true">//关闭游标</span></code></pre><h4 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h4><pre class=" language-C"><code class="language-C">EXEC SQL BEGIN DELARE SECTION;  const char*stmt = "INSERT INTO TEST VALUESO(?);" /* 声明SQL主变量内容是INSERT语句*/EXEC SQL END DELARE SECTION;...EXEC SQL PREPARE mystmt FROM:stmt; /*准备语句*/...EXEC SQL EXECUTE mystmt USING 100; /*执行语句，设定INSERTI语句插入值100*/ </code></pre><h4 id="过程化SQL"><a href="#过程化SQL" class="headerlink" title="过程化SQL"></a>过程化SQL</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--条件控制</span><span class="token keyword">IF</span> condition <span class="token keyword">THEN</span>      Sequence_of_statements<span class="token punctuation">;</span><span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token keyword">IF</span> condition <span class="token keyword">THEN</span>     Sequence_of_statements<span class="token punctuation">;</span><span class="token keyword">ELSE</span>      Sequence_of_statements<span class="token punctuation">;</span> <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--可以嵌套</span><span class="token comment" spellcheck="true">--循环控制 提供EXIT、BREAK、LEAVE等结束循环</span>LOOP   Sequence_of_statements<span class="token punctuation">;</span><span class="token keyword">END</span> LOOP<span class="token keyword">WHILE</span> condition  LOOP  Sequence_of_statements<span class="token punctuation">;</span><span class="token keyword">END</span> LOOP<span class="token punctuation">;</span><span class="token keyword">FOR</span> count <span class="token operator">IN</span>  <span class="token punctuation">[</span>REVERSE<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125; bound1..bound2 LOOP</span>   Sequence_of_statements<span class="token punctuation">;</span><span class="token keyword">END</span> LOOP<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--将count设置为循环的下界bound1检查它是否小于上界bound2</span><span class="token comment" spellcheck="true">--当指定了REVERSE时则将count设置为循环的上界bound2,检查count是否大与下界bound1</span><span class="token comment" spellcheck="true">--越界退出循环,按照步长+1 -1，更新count</span></code></pre><h4 id="存储过程和函数"><a href="#存储过程和函数" class="headerlink" title="存储过程和函数"></a>存储过程和函数</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--存储过程定义,replace是为了替代重名的存储过程</span><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">proc</span> 过程名 @参数<span class="token number">1</span> 数据类型<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">AS</span> <span class="token operator">&lt;</span>过程化SQL块<span class="token punctuation">(</span>包括声明部分和可执行语句部分<span class="token punctuation">)</span><span class="token operator">></span><span class="token comment" spellcheck="true">--执行存储过程</span><span class="token keyword">call</span><span class="token operator">/</span>perform 过程名 <span class="token operator">&lt;</span>和参数<span class="token number">1</span>类型相同的变量<span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">--修改存储过程</span><span class="token keyword">alter</span> <span class="token keyword">proc</span> 过程名<span class="token number">1</span> <span class="token keyword">rename</span> <span class="token keyword">to</span> 过程名<span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--重新编译</span><span class="token keyword">alter</span> <span class="token keyword">proc</span> 过程名 compile<span class="token comment" spellcheck="true">--删除</span><span class="token keyword">drop</span> <span class="token keyword">proc</span> 过程名<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--函数定义</span> <span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">FUNCTION</span> 函数名<span class="token punctuation">(</span>参数<span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token operator">&lt;</span>类型<span class="token operator">></span> <span class="token keyword">AS</span> <span class="token operator">&lt;</span>过程化SQL块<span class="token operator">></span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--其他与存储过程相同</span><span class="token comment" spellcheck="true">--XSCJ示例</span><span class="token comment" spellcheck="true">--1</span><span class="token keyword">use</span> XSCJgo<span class="token keyword">create</span> <span class="token keyword">proc</span> sp_cxxs <span class="token keyword">as</span><span class="token keyword">begin</span>   <span class="token keyword">select</span> Sname <span class="token keyword">from</span>  S <span class="token keyword">where</span> Sdept <span class="token operator">=</span> <span class="token string">'计算机'</span><span class="token keyword">end</span>go<span class="token keyword">exec</span> sp_cxxs<span class="token comment" spellcheck="true">--2</span><span class="token keyword">create</span> <span class="token keyword">proc</span> sp_cxcj <span class="token variable">@sna</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">as</span><span class="token keyword">begin</span>   <span class="token keyword">select</span> Cname<span class="token punctuation">,</span>Score <span class="token keyword">from</span> SC<span class="token punctuation">,</span>C <span class="token keyword">where</span> Sno <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> Sno <span class="token keyword">from</span> S <span class="token keyword">where</span> Sname <span class="token operator">=</span> <span class="token variable">@sna</span><span class="token punctuation">)</span> <span class="token operator">and</span> SC<span class="token punctuation">.</span>Cno <span class="token operator">=</span> C<span class="token punctuation">.</span>Cno<span class="token keyword">end</span>go<span class="token keyword">exec</span> sp_cxcj <span class="token string">'李强'</span><span class="token comment" spellcheck="true">--3</span><span class="token keyword">create</span> <span class="token keyword">proc</span> sp_cxzgf <span class="token variable">@score</span> <span class="token keyword">tinyint</span> output<span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token variable">@score</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>Score<span class="token punctuation">)</span> <span class="token keyword">from</span> SC<span class="token punctuation">,</span>C <span class="token keyword">where</span> SC<span class="token punctuation">.</span>Cno <span class="token operator">=</span> C<span class="token punctuation">.</span>Cno <span class="token operator">and</span> Cname <span class="token operator">=</span> <span class="token string">'C语言'</span><span class="token keyword">return</span>go<span class="token keyword">declare</span> <span class="token variable">@score</span> <span class="token keyword">tinyint</span> <span class="token keyword">exec</span> sp_cxzgf <span class="token variable">@score</span> output<span class="token keyword">print</span> <span class="token variable">@score</span> <span class="token comment" spellcheck="true">--4到5</span><span class="token keyword">create</span> <span class="token keyword">proc</span> sp_cxxs1 <span class="token variable">@sna</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@avg_s</span> <span class="token keyword">tinyint</span> output<span class="token keyword">as</span><span class="token keyword">begin</span>  <span class="token keyword">select</span> <span class="token variable">@avg_s</span> <span class="token operator">=</span> <span class="token function">AVG</span><span class="token punctuation">(</span>Score<span class="token punctuation">)</span> <span class="token keyword">from</span> SC<span class="token punctuation">,</span>S <span class="token keyword">where</span> SC<span class="token punctuation">.</span>Sno <span class="token operator">=</span> S<span class="token punctuation">.</span>Sno <span class="token operator">and</span> Sname <span class="token operator">=</span> <span class="token variable">@sna</span> <span class="token keyword">return</span><span class="token keyword">end</span>go <span class="token keyword">declare</span> <span class="token variable">@avg_s</span> <span class="token keyword">tinyint</span> <span class="token keyword">exec</span> sp_cxxs1 <span class="token string">'李强'</span><span class="token punctuation">,</span><span class="token variable">@avg_s</span> output<span class="token keyword">print</span> <span class="token variable">@avg_s</span> <span class="token comment" spellcheck="true">--6</span><span class="token keyword">select</span> <span class="token keyword">text</span> <span class="token keyword">from</span> syscomments <span class="token keyword">where</span> id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> sysobjects <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">'sp_cxxs1'</span> <span class="token operator">and</span> xtype <span class="token operator">=</span> <span class="token string">'P'</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token operator">/</span><span class="token comment" spellcheck="true">--7</span><span class="token keyword">alter</span> <span class="token keyword">proc</span> sp_cxxs1 <span class="token variable">@cna</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@avg_s</span> <span class="token keyword">tinyint</span> output<span class="token keyword">as</span><span class="token keyword">begin</span>  <span class="token keyword">select</span> <span class="token variable">@avg_s</span> <span class="token operator">=</span> <span class="token function">AVG</span><span class="token punctuation">(</span>Score<span class="token punctuation">)</span> <span class="token keyword">from</span> SC<span class="token punctuation">,</span>C <span class="token keyword">where</span> SC<span class="token punctuation">.</span>Cno <span class="token operator">=</span> C<span class="token punctuation">.</span>Cno <span class="token operator">and</span> Cteacher <span class="token operator">=</span> <span class="token variable">@cna</span> <span class="token keyword">return</span><span class="token keyword">end</span>go <span class="token keyword">declare</span> <span class="token variable">@avg_s</span> <span class="token keyword">tinyint</span> <span class="token keyword">exec</span> sp_cxxs1 <span class="token string">'李彤'</span><span class="token punctuation">,</span><span class="token variable">@avg_s</span> output<span class="token keyword">print</span> <span class="token variable">@avg_s</span><span class="token comment" spellcheck="true">--8</span><span class="token keyword">drop</span> <span class="token keyword">proc</span> sp_cxxs1</code></pre><h4 id="Transact-SQL"><a href="#Transact-SQL" class="headerlink" title="Transact-SQL"></a>Transact-SQL</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> XSCJ<span class="token comment" spellcheck="true">/*--2 应用转换函数declare @length int select @length = len(Cname) from C where Cno='C5'print 'C5号课程名称的长度为:'+convert(char(3),@length)--3 应用聚合函数declare @Count int select @Count = count(distinct Sno) from SC print '选课的人数共有'+cast(@Count as char(1))+'名学生'--4 应用if...else语句declare @sno char(3),@sname nchar(2)set @sno = 'S3'if (select avg(score) from SC where Sno=@sno) >=75    begin       select @sname = Sname from S where Sno = @sno      print @sname+'达到毕业要求！！！'    endelse    print @sname+'XX不能按期毕业！'--5 应用case语句declare @cj float, @str varchar(60)set @cj = 90set @str = case when @cj>100 or @cj&lt;0 then '成绩输入错误，成绩应在0到100之间'                when @cj>=60 and @cj&lt;70 then '及格'                when @cj>=70 and @cj&lt;80 then '中等'                when @cj>=80 and @cj&lt;90 then '优良'                when @cj>=90 and @cj&lt;=100 then '优秀'            else '不及格'            end             print '该学生的成绩等级是:'+@str--6 综合应用/*create table hyuser(  hyid int identity(1,1) primary key,  hyname varchar(5) unique,  hypwd varchar(6))insert into hyuser values ('stu1', '111111'),('stu2','222222'),('stu3','333333')*/</span> <span class="token keyword">declare</span> <span class="token variable">@hyuser</span> char<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@hypwd</span> char<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">set</span> <span class="token variable">@hyuser</span> <span class="token operator">=</span> <span class="token string">'stu1'</span> <span class="token keyword">set</span> <span class="token variable">@hypwd</span> <span class="token operator">=</span> <span class="token string">'111111'</span> <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> hyname  <span class="token keyword">from</span> hyuser <span class="token keyword">where</span> hyname <span class="token operator">=</span> <span class="token variable">@hyuser</span><span class="token punctuation">)</span>     <span class="token keyword">begin</span>        <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> hypwd <span class="token keyword">from</span> hyuser <span class="token keyword">where</span> hypwd <span class="token operator">=</span> <span class="token variable">@hypwd</span><span class="token punctuation">)</span>           <span class="token keyword">print</span> <span class="token string">'输入登录信息正确，成功登录'</span>       <span class="token keyword">else</span>            <span class="token keyword">print</span> <span class="token string">'用户密码输入错误！！！'</span>     <span class="token keyword">end</span><span class="token keyword">else</span>      <span class="token keyword">print</span> <span class="token string">'用户名输入错误！！！'</span><span class="token comment" spellcheck="true">--7 break 与 continue的区别示例</span><span class="token keyword">declare</span> <span class="token variable">@cno</span> char<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@cname</span> <span class="token keyword">nchar</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@cno</span> <span class="token operator">=</span> <span class="token string">'C2'</span><span class="token keyword">select</span> <span class="token variable">@cname</span> <span class="token operator">=</span> cname  <span class="token keyword">from</span> C <span class="token keyword">where</span> Cno<span class="token operator">=</span><span class="token variable">@cno</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> SC <span class="token keyword">where</span> Cno<span class="token operator">=</span><span class="token variable">@cno</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">100</span>   <span class="token keyword">begin</span>      <span class="token keyword">update</span> SC <span class="token keyword">set</span> score <span class="token operator">=</span> score <span class="token operator">+</span> <span class="token number">10</span> <span class="token keyword">where</span> Cno<span class="token operator">=</span><span class="token variable">@cno</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> <span class="token keyword">from</span> SC <span class="token keyword">where</span> Cno<span class="token operator">=</span><span class="token variable">@cno</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">100</span>          <span class="token keyword">break</span> <span class="token comment" spellcheck="true">--直接退出循环</span>     <span class="token keyword">else</span>       <span class="token keyword">continue</span> <span class="token comment" spellcheck="true">--跳过后面的语句进入下一个循环</span>  <span class="token keyword">end</span>  <span class="token keyword">print</span> <span class="token variable">@cname</span><span class="token operator">+</span><span class="token string">'课程加分超出范围'</span>  <span class="token comment" spellcheck="true">--等两秒再输出</span>  <span class="token keyword">waitfor</span> delay <span class="token string">'00:00:02'</span>  <span class="token keyword">select</span><span class="token operator">*</span> <span class="token keyword">from</span> SC  <span class="token operator">*</span><span class="token operator">/</span>  <span class="token comment" spellcheck="true">--设置str时加(max) char(13)表示换行</span><span class="token keyword">declare</span> <span class="token variable">@i</span> <span class="token keyword">tinyint</span> <span class="token punctuation">,</span><span class="token variable">@sum</span> <span class="token keyword">smallint</span><span class="token punctuation">,</span> <span class="token variable">@count</span> <span class="token keyword">tinyint</span><span class="token punctuation">,</span><span class="token variable">@str</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">set</span> <span class="token variable">@sum</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">set</span> <span class="token variable">@count</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">set</span> <span class="token variable">@str</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">@i</span><span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span>   <span class="token keyword">begin</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">@i</span><span class="token operator">%</span><span class="token number">3</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>     <span class="token keyword">begin</span>      <span class="token keyword">set</span> <span class="token variable">@sum</span> <span class="token operator">=</span> <span class="token variable">@i</span><span class="token operator">+</span><span class="token variable">@sum</span>      <span class="token keyword">set</span> <span class="token variable">@count</span> <span class="token operator">=</span><span class="token variable">@count</span><span class="token operator">+</span><span class="token number">1</span>      <span class="token comment" spellcheck="true">--ltrim()转字符并取出前置空格</span>      <span class="token keyword">set</span> <span class="token variable">@str</span> <span class="token operator">=</span> <span class="token variable">@str</span><span class="token operator">+</span>ltrim<span class="token punctuation">(</span><span class="token variable">@i</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">' '</span>     <span class="token keyword">end</span>    <span class="token keyword">set</span> <span class="token variable">@i</span> <span class="token operator">=</span> <span class="token variable">@i</span><span class="token operator">+</span><span class="token number">1</span>   <span class="token keyword">end</span><span class="token keyword">print</span> <span class="token variable">@str</span><span class="token keyword">print</span> <span class="token variable">@sum</span><span class="token keyword">print</span> <span class="token variable">@count</span></code></pre><h4 id="Triggers及事务"><a href="#Triggers及事务" class="headerlink" title="Triggers及事务"></a>Triggers及事务</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--事务</span><span class="token comment" spellcheck="true">--SSMS注释快捷键</span><span class="token keyword">begin</span>  <span class="token keyword">tran</span><span class="token operator">|</span><span class="token keyword">transaction</span> <span class="token punctuation">[</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; transaction_name | @tran_name_variable &amp;#125;  </span>      <span class="token punctuation">[</span> <span class="token keyword">WITH</span> MARK <span class="token punctuation">[</span> <span class="token string">'description'</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span>         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">commit</span> <span class="token keyword">tran</span><span class="token operator">|</span><span class="token keyword">transaction</span> <span class="token punctuation">[</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123; transaction_name | @tran_name_variable | rollback</span>                         <span class="token comment" spellcheck="true">--triggers</span><span class="token comment" spellcheck="true">--删除的表用于存储 DELETE 和 UPDATE 语句所影响的行的副本。 在执行 DELETE 或 UPDATE 语句的过程中，行从触发器表中删除，并传输到删除的表中。 删除的表和触发器表通常没有相同的行。</span><span class="token comment" spellcheck="true">--插入的表用于存储 INSERT 和 UPDATE 语句所影响的行的副本。 在执行插入或更新事务过程中，新行会同时添加到 inserted 表和触发器表中。 插入的表中的行是触发器表中的新行的副本</span><span class="token comment" spellcheck="true">--1、</span><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Delete_C <span class="token keyword">on</span> C<span class="token keyword">after</span> <span class="token keyword">delete</span><span class="token keyword">as</span>   <span class="token keyword">delete</span> <span class="token keyword">from</span> SC <span class="token keyword">where</span> SC<span class="token punctuation">.</span>Cno <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> Cno <span class="token keyword">from</span> deleted<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token string">'课程记录及其选课记录已被删除'</span><span class="token keyword">begin</span> <span class="token keyword">tran</span>     <span class="token keyword">delete</span> <span class="token keyword">from</span> C <span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'C1'</span>    <span class="token keyword">select</span> Cno <span class="token keyword">from</span> SC<span class="token keyword">rollback</span>     <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> SC<span class="token comment" spellcheck="true">--2</span><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Insert_S <span class="token keyword">on</span> S<span class="token keyword">after</span>  <span class="token keyword">insert</span> <span class="token keyword">as</span> <span class="token keyword">begin</span>  <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> Sage <span class="token keyword">from</span> inserted <span class="token keyword">where</span> Sage <span class="token operator">></span><span class="token number">25</span> <span class="token operator">or</span> Sage <span class="token operator">&lt;</span><span class="token number">18</span><span class="token punctuation">)</span>  <span class="token keyword">rollback</span>  <span class="token keyword">begin</span> <span class="token keyword">tran</span>    <span class="token keyword">print</span> <span class="token string">'学生年龄数值错误！！！'</span><span class="token keyword">end</span>  <span class="token keyword">insert</span> <span class="token keyword">into</span> S <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">'S8'</span><span class="token punctuation">,</span><span class="token string">'魏晋'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token string">'通信工程'</span><span class="token punctuation">)</span>  <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> S<span class="token comment" spellcheck="true">--3</span>  go  <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> name <span class="token keyword">from</span> sysobjects   <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'tri_Update_SC'</span> <span class="token operator">and</span> <span class="token keyword">type</span> <span class="token operator">=</span> <span class="token string">'TR'</span><span class="token punctuation">)</span>  <span class="token keyword">drop</span> <span class="token keyword">trigger</span> tri_Update_SC  go  <span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Update_SC <span class="token keyword">on</span> SC  instead <span class="token keyword">of</span> <span class="token keyword">update</span>   <span class="token keyword">as</span>   <span class="token keyword">if</span> <span class="token keyword">update</span><span class="token punctuation">(</span>Score<span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token string">'不得随意修改学生成绩'</span>  <span class="token keyword">update</span> SC <span class="token keyword">set</span> Score <span class="token operator">=</span> <span class="token number">100</span> <span class="token keyword">where</span> Sno <span class="token operator">=</span> <span class="token string">'S1'</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> SC<span class="token comment" spellcheck="true">--4</span><span class="token keyword">exec</span> sp_help tri_Update_SC<span class="token keyword">exec</span> sp_helptext tri_Update_SC<span class="token keyword">exec</span> sp_helptrigger SC<span class="token punctuation">,</span><span class="token string">'update'</span><span class="token comment" spellcheck="true">--5</span><span class="token keyword">alter</span> <span class="token keyword">table</span> SC <span class="token keyword">disable</span> <span class="token keyword">trigger</span> tri_Update_SC<span class="token keyword">begin</span> <span class="token keyword">tran</span><span class="token keyword">update</span> SC <span class="token keyword">set</span> Score <span class="token operator">=</span> <span class="token number">100</span> <span class="token keyword">where</span> Sno <span class="token operator">=</span> <span class="token string">'S1'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> SC<span class="token keyword">rollback</span><span class="token comment" spellcheck="true">--6</span><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Insert_SC <span class="token keyword">on</span> SCinstead <span class="token keyword">of</span> <span class="token keyword">insert</span><span class="token keyword">as</span> <span class="token keyword">begin</span>  <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> Score <span class="token keyword">from</span> inserted   <span class="token keyword">where</span> Score <span class="token operator">&lt;</span><span class="token number">0</span>  <span class="token operator">or</span> Score <span class="token operator">></span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token string">'分值输入不合理（0-100）！'</span> <span class="token keyword">end</span><span class="token keyword">insert</span> <span class="token keyword">into</span> SC <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'C1'</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> SC <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">'S1'</span><span class="token punctuation">,</span><span class="token string">'C1'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> SC<span class="token comment" spellcheck="true">--7</span><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Update_S <span class="token keyword">on</span> S<span class="token keyword">after</span> <span class="token keyword">update</span><span class="token keyword">as</span><span class="token keyword">if</span> <span class="token keyword">update</span><span class="token punctuation">(</span>Sno<span class="token punctuation">)</span><span class="token keyword">begin</span>     <span class="token keyword">update</span> SC <span class="token keyword">set</span> Sno <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> Sno <span class="token keyword">from</span> inserted<span class="token punctuation">)</span>     <span class="token keyword">where</span> SC<span class="token punctuation">.</span>Sno  <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> Sno <span class="token keyword">from</span> S<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token string">'选课表已同步更新'</span><span class="token keyword">end</span><span class="token keyword">begin</span> <span class="token keyword">tran</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> Sno <span class="token keyword">from</span> SC  <span class="token keyword">update</span> S <span class="token keyword">set</span> Sno <span class="token operator">=</span> <span class="token string">'S8'</span> <span class="token keyword">where</span> Sno <span class="token operator">=</span> <span class="token string">'S6'</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> Sno <span class="token keyword">from</span> SC<span class="token keyword">rollback</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> Sno <span class="token keyword">from</span> SC<span class="token comment" spellcheck="true">--8</span><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_Delete_C1 <span class="token keyword">on</span> Cinstead <span class="token keyword">of</span>  <span class="token keyword">delete</span><span class="token keyword">as</span> <span class="token keyword">begin</span> <span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">a</span><span class="token punctuation">.</span>Cno <span class="token keyword">from</span> SC <span class="token number">a</span><span class="token punctuation">,</span>deleted <span class="token number">d</span> <span class="token keyword">where</span> <span class="token number">a</span><span class="token punctuation">.</span>Cno <span class="token operator">=</span> <span class="token number">d</span><span class="token punctuation">.</span>Cno<span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token string">'该课程已有人选择！！！'</span><span class="token keyword">else</span>   <span class="token keyword">delete</span> <span class="token keyword">from</span> C <span class="token keyword">where</span> Cno <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> Cno <span class="token keyword">from</span> deleted<span class="token punctuation">)</span><span class="token keyword">end</span><span class="token keyword">delete</span> <span class="token keyword">from</span> C <span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'C1'</span><span class="token keyword">begin</span> <span class="token keyword">tran</span><span class="token keyword">delete</span> <span class="token keyword">from</span> C <span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'C6'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> C<span class="token keyword">rollback</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> C</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/082416107.html"/>
      <url>/2021/082416107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
